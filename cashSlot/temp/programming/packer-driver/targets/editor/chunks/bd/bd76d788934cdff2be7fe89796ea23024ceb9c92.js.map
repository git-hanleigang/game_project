{"version":3,"sources":["file:///Users/xcyy/Desktop/createrPro/cashSlot/assets/scripts/reelRoll.ts"],"names":["_decorator","Component","Node","UITransform","Sprite","Singleton","symbolNode","ccclass","property","reelRoll","Number","type","tooltip","singleton","getInstance","symbolList","realRowNum","currMoveLength","reelRowNum","colNum","rollStates","quickStop","rollSymbolTypes","rollPoint","rollListLength","rowNum","moveLength","moveSpeed","start","reelColAndRow","length","curColIndex","rollList","getRandomInt","initReel","moveDownSymol","symbolListLength","index","node","active","pos","getPosition","scrip","getComponent","y","removePosY","update","deltaTime","moveY","setPosition","x","updateAllActiveSymbolRow","moveDownAddSymol","hideBigSymbolCoverImg","Math","abs","stopReel","bigSymbols","isActive","isbig","checkIsSameKey","symbolType","bigNode","bigRow","getBigRow","bigRowNum","hideRow","iRow","hideNode","getActiveSymbol","img","enabled","row","getActiveSymbolNum","num","addNum","nearNode","getOneNearSymbol","addNode","getUnActiveSymbol","getSmbolType","updateSymbolNodeinfo","createSymbol","reelWidth","symbolHeight","newNode","addChild","uiTra","addComponent","anchorX","anchorY","init","setSiblingIndex","changeSymbolNode","posY","createSymbolNode","rowIndex","posYConfine","script","updateSymbolNodeInfo","quickStopResetSymbol","normalResetSymbol","beginReel","machineScript","reelStopFunc"],"mappings":"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","sourcesContent":["import { _decorator, Component, EditBox, Node, UITransform, Sprite } from 'cc';\nconst { ccclass, property } = _decorator;\nimport Singleton from './Singleton';\nimport { symbolNode } from './symbolNode';\n\n@ccclass('reelRoll')\nexport class reelRoll extends Component {\n    public singleton: Singleton = Singleton.getInstance()\n    public symbolList: Node[] = []\n    public realRowNum: number = null; // 真实创建行\n    public currMoveLength: number = 0\n    public reelRowNum: number = 0\n    public colNum: number = null; // 行配置\n    public rollStates: boolean = false\n    public quickStop: boolean = false\n    public rollSymbolTypes: number[] = []\n    public rollPoint: number = 0; // 滚动指针\n    public rollListLength: number = null; // 滚动指针\n    public rowNum: number = null; // 行配置\n    @property(Number)\n    public curColIndex: number = 0\n    public moveLength: any = 0;\n    @property({ type: Number, tooltip:\"小块高度\"})\n    public symbolHeight: any = 160;\n    @property({ type: Number, tooltip:\"reel条宽度度\"})\n    public reelWidth: any = 210;\n    public moveSpeed: number = 1000;  \n\n    start() {\n        this.colNum = this.singleton.reelColAndRow.length\n        this.rowNum = this.singleton.reelColAndRow[this.curColIndex]\n        this.rollSymbolTypes = this.singleton.rollList[this.curColIndex]\n        this.rollListLength = this.rollSymbolTypes.length\n        this.rollPoint = this.singleton.getRandomInt(0,(this.rollListLength-1))\n        this.reelRowNum = this.rowNum+3\n\n        this.initReel()\n    }\n\n    moveDownSymol(){\n\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index];\n            if (node.active = true) {\n                let pos = node.getPosition()\n                let scrip = node.getComponent(symbolNode)\n                if (pos.y <= scrip.removePosY) {\n                    node.active = false // 移除就隐藏吧\n                }\n            }\n        } \n    }\n\n    update(deltaTime: number) {\n        if (this.rollStates) {\n\n            // 判断移除\n            this.moveDownSymol()\n\n            // 开始刷新小块位置\n            let moveY = deltaTime * this.moveSpeed\n            let symbolListLength = this.symbolList.length\n            for (let index = 0; index < symbolListLength; index++) {\n                let node = this.symbolList[index];\n                if (node.active) {\n                    let scrip = node.getComponent(symbolNode)\n                    // 刷新位置\n                    if (node.active) {\n                        let pos = node.getPosition()\n                        node.setPosition(pos.x,pos.y - moveY)\n                    }  \n                }\n            }\n\n           \n\n            this.updateAllActiveSymbolRow()\n\n            // 该隐藏的隐藏了现在需要补块了\n            this.moveDownAddSymol()\n\n            this.hideBigSymbolCoverImg()\n            this.currMoveLength = this.currMoveLength + moveY // 更新总体移动距离\n            if (Math.abs(this.currMoveLength)  >= this.moveLength || this.quickStop) {\n                this.stopReel()\n            }\n        } \n    }\n\n    hideBigSymbolCoverImg(){\n        let bigSymbols = []\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index];\n            let isActive = node.active\n            let scrip = node.getComponent(symbolNode)\n            if (isActive == true) {\n                let isbig = this.singleton.checkIsSameKey(this.singleton.bigSymbols,scrip.symbolType)\n                if (isbig == true) {\n                    bigSymbols[bigSymbols.length] = node\n                }\n            }\n        }\n\n        for (let index = 0; index < bigSymbols.length; index++) {\n            const bigNode = bigSymbols[index];\n            let scrip = bigNode.getComponent(symbolNode)\n            let bigRow =  this.singleton.getBigRow(scrip.symbolType)\n            for (let bigRowNum = 1; bigRowNum < bigRow; bigRowNum++) {\n                let hideRow = scrip.iRow + bigRowNum\n                let hideNode = this.getActiveSymbol(hideRow)\n                if (hideNode != null ) {\n                    let img = hideNode.getComponent(Sprite)\n                    img.enabled = false\n                } \n            }\n        }\n    }\n\n    getActiveSymbol(row: number): any{\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index];\n            let isActive = node.active\n            let scrip = node.getComponent(symbolNode)\n            if (isActive ==  true && row == scrip.iRow) {\n                return node\n            }\n        }\n        return null\n    }\n\n    getActiveSymbolNum(): any{\n        let num = 0\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index];\n            let isActive = node.active\n            let scrip = node.getComponent(symbolNode)\n            if (isActive ==  true ) {\n                num = num + 1\n            }\n        }\n        return num\n    }\n\n    moveDownAddSymol(){\n\n        let num = this.getActiveSymbolNum()\n        if (num >= this.realRowNum) {\n            return \n        }\n\n        let addNum = this.realRowNum - num\n        for (let index = 0; index < addNum; index++) {\n            \n            let nearNode = this.getOneNearSymbol()\n            if (nearNode == null) {\n                // 当速度非常大的时候是有可能整列都被隐藏的\n                let row = 0\n                let addNode = this.getUnActiveSymbol()\n                if (addNode != null) {\n                    addNode.active = true\n                    let symbolType = this.getSmbolType()\n                    this.updateSymbolNodeinfo(addNode,row,symbolType)\n                }else{\n                    let symbolType = this.getSmbolType()\n                    addNode = this.createSymbol(symbolType,row)\n                    this.symbolList[this.symbolList.length] = addNode\n                }\n                addNode.setPosition(this.reelWidth/2,this.symbolHeight)\n            } else {\n                let scrip = nearNode.getComponent(symbolNode)\n                let addNode = this.getUnActiveSymbol()\n                if (addNode != null) {\n                    addNode.active = true\n                    let symbolType = this.getSmbolType()\n                    this.updateSymbolNodeinfo(addNode,scrip.iRow,symbolType)\n                }else{\n                    let symbolType = this.getSmbolType()\n                    addNode = this.createSymbol(symbolType,scrip.iRow)\n                    this.symbolList[this.symbolList.length] = addNode\n                }\n                addNode.setPosition(this.reelWidth/2,nearNode.getPosition().y + this.symbolHeight)\n            }\n        }\n    }\n\n    createSymbol(symbolType: number,iRow: number): Node{\n\n        let newNode = new Node();\n        this.node.addChild(newNode);\n\n        let uiTra = newNode.addComponent(UITransform)\n        uiTra.anchorX = 0.5\n        uiTra.anchorY = 0 \n        let scrip = newNode.addComponent(symbolNode)\n        scrip.init()\n        this.updateSymbolNodeinfo(newNode,iRow,symbolType)\n        return newNode\n    }\n\n    updateSymbolNodeinfo(node: Node,iRow: number,symbolType: number){\n        node.setSiblingIndex(symbolType)  \n        let scrip = node.getComponent(symbolNode)\n        scrip.iRow  = iRow\n        scrip.symbolType = symbolType\n        let isbig = this.singleton.checkIsSameKey(this.singleton.bigSymbols,symbolType)\n        if (isbig == true) {\n            let bigRow =  this.singleton.getBigRow(symbolType)\n            scrip.removePosY = - (bigRow -1) * this.symbolHeight\n        }else{\n            scrip.removePosY = - this.symbolHeight\n        }\n        scrip.changeSymbolNode(symbolType)\n    }\n\n    getOneNearSymbol(): any{\n\n        let nearNode = null\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index]\n            if (node.active == true) {\n                let posY = node.getPosition().y \n                if ( nearNode == null ){\n                    nearNode = node\n                } else {\n                    if (posY > nearNode.getPosition().y  ) {\n                        nearNode = node\n                    }\n                }\n\n            } \n        }\n        return nearNode\n    }\n\n    initReel(){\n        for (let iRow = 0; iRow < this.reelRowNum; iRow++){\n            let addNode = this.getUnActiveSymbol()\n            let symbolType = this.getSmbolType()\n            if (addNode != null){\n                addNode.active = true\n            }else{\n                addNode = this.createSymbolNode(symbolType, iRow)\n                this.symbolList[this.symbolList.length] = addNode\n            }\n            addNode.setPosition(this.reelWidth/2, iRow*this.symbolHeight)\n        }\n    }\n\n    updateAllActiveSymbolRow( ){\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++) {\n            let node = this.symbolList[index];\n            let isActive = node.active\n            if (isActive) {\n                let scrip = node.getComponent(symbolNode)\n                let posY = node.getPosition().y\n                let rowIndex = this.realRowNum\n                while (true) {\n                    let posYConfine = rowIndex * this.symbolHeight\n                    if (posY <= posYConfine) {\n                        scrip.iRow = rowIndex \n                    }else {\n                        break\n                    }\n                    rowIndex = rowIndex -1\n                }\n            }\n        }\n    }\n\n    public createSymbolNode(symbolType: number, iRow: number): Node {\n        let newNode = new Node()\n        this.node.addChild(newNode)\n\n        let uiTra = newNode.addComponent(UITransform)\n        uiTra.anchorX = 0.5\n        uiTra.anchorY = 0 \n\n        let script = newNode.addComponent(symbolNode)\n        script.init()\n\n        this.updateSymbolNodeInfo(newNode, iRow, symbolType)\n        return newNode\n    }\n\n    updateSymbolNodeInfo(node: Node, iRow: number, symbolType: number) {\n        node.setSiblingIndex(symbolType)\n        let script = node.getComponent(symbolNode)\n        script.iRow = iRow\n        script.symbolType = symbolType\n\n        script.removePosY = -this.symbolHeight\n        script.changeSymbolNode(symbolType)\n    }\n\n    public getSmbolType(): number{\n        let symbolType = this.rollSymbolTypes[this.rollPoint] \n        this.rollPoint = this.rollPoint + 1\n        if (this.rollPoint >= this.rollListLength ) {\n            this.rollPoint = 0\n        }\n        return symbolType\n    }\n\n    public getUnActiveSymbol(): any{\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++){\n            let node = this.symbolList[index]\n            if (node.active == false){\n                return node\n            }\n        }\n        return null\n    }\n\n    quickStopResetSymbol(){\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++){\n            let node = this.symbolList[index]\n            node.active = false\n        }\n        this.initReel()\n    }\n\n    normalResetSymbol(){\n        let symbolListLength = this.symbolList.length\n        for (let index = 0; index < symbolListLength; index++){\n            let node = this.symbolList[index]\n            if (node.active == true){\n                let script = node.getComponent(symbolNode)\n                node.setPosition(this.reelWidth/2, script.iRow*this.symbolHeight)\n            }\n        }\n    }\n\n    public beginReel(){\n        this.currMoveLength = 0\n        this.rollStates = true\n        this.quickStop = false\n    }\n\n    public stopReel(){\n        this.rollStates = false\n        if (this.quickStop == true){\n            this.quickStopResetSymbol()\n        }else\n        {\n            this.normalResetSymbol()\n        }\n        this.singleton.machineScript.reelStopFunc(1)\n    }\n}\n\n"]}