{"version":3,"sources":["file:///Users/xcyy/Desktop/createrPro/cashSlot/assets/scripts/reelRoll.ts"],"names":["_decorator","Component","Singleton","ccclass","property","reelRoll","Number","singleton","getInstance","symbolList","currMoveLength","reelRowNum","colNum","rollStates","quickStop","rollSymbolTypes","rollPoint","rollListLength","start","reelColAndRow","length","curColIndex","rollList","initReel","update","deltaTime","iRow","addNode","getUnActiveSymbol","active","symbolType","getSmbolType","row","symbolListLength","index","node","beginReel","stopReel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEdC,MAAAA,S;;;;;;;;;OADD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;0BAIjBK,Q,WADZF,OAAO,CAAC,UAAD,C,UAYHC,QAAQ,CAACE,MAAD,C,2BAZb,MACaD,QADb,SAC8BJ,SAD9B,CACwC;AAAA;AAAA;AAAA,eAC7BM,SAD6B,GACN;AAAA;AAAA,sCAAUC,WAAV,EADM;AAAA,eAE7BC,UAF6B,GAER,EAFQ;AAAA,eAG7BC,cAH6B,GAGJ,CAHI;AAAA,eAI7BC,UAJ6B,GAIR,CAJQ;AAAA,eAK7BC,MAL6B,GAKZ,IALY;AAKN;AALM,eAM7BC,UAN6B,GAMP,KANO;AAAA,eAO7BC,SAP6B,GAOR,KAPQ;AAAA,eAQ7BC,eAR6B,GAQD,EARC;AAAA,eAS7BC,SAT6B,GAST,CATS;AASN;AATM,eAU7BC,cAV6B,GAUJ,IAVI;;AAUE;AAVF;AAAA;;AAapCC,QAAAA,KAAK,GAAG;AACJ,eAAKN,MAAL,GAAc,KAAKL,SAAL,CAAeY,aAAf,CAA6BC,MAA3C;AACA,eAAKT,UAAL,GAAkB,KAAKJ,SAAL,CAAeY,aAAf,CAA6B,KAAKE,WAAlC,CAAlB;AACA,eAAKN,eAAL,GAAuB,KAAKR,SAAL,CAAee,QAAf,CAAwB,KAAKD,WAA7B,CAAvB;AACA,eAAKL,SAAL,GAAiB,CAAjB;AACA,eAAKC,cAAL,GAAsB,KAAKF,eAAL,CAAqBK,MAA3C;AAEA,eAAKG,QAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDF,QAAAA,QAAQ,GAAE;AACN,eAAI,IAAIG,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAG,KAAKf,UAA9B,EAA0Ce,IAAI,EAA9C,EAAiD;AAC7C,gBAAIC,OAAO,GAAG,KAAKC,iBAAL,CAAuBF,IAAvB,CAAd;;AACA,gBAAIC,OAAO,IAAI,IAAf,EAAoB;AAChBA,cAAAA,OAAO,CAACE,MAAR,GAAiB,IAAjB;AACA,kBAAIC,UAAU,GAAG,KAAKC,YAAL,EAAjB;AACH;AACJ;AACJ;;AAEMA,QAAAA,YAAY,GAAU;AACzB,cAAID,UAAU,GAAG,KAAKf,eAAL,CAAqB,KAAKC,SAA1B,CAAjB;AACA,eAAKA,SAAL,GAAiB,KAAKA,SAAL,GAAiB,CAAlC;;AACA,cAAI,KAAKA,SAAL,IAAkB,KAAKC,cAA3B,EAA4C;AACxC,iBAAKD,SAAL,GAAiB,CAAjB;AACH;;AACD,iBAAOc,UAAP;AACH;;AAEMF,QAAAA,iBAAiB,CAACI,GAAD,EAAkB;AACtC,cAAIC,gBAAgB,GAAG,KAAKxB,UAAL,CAAgBW,MAAvC;;AACA,eAAI,IAAIc,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGD,gBAA3B,EAA6CC,KAAK,EAAlD,EAAqD;AACjD,gBAAIC,IAAI,GAAG,KAAK1B,UAAL,CAAgByB,KAAhB,CAAX;;AACA,gBAAIC,IAAI,CAACN,MAAL,IAAe,KAAnB,EAAyB;AACrB,qBAAOM,IAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;AAEMC,QAAAA,SAAS,GAAE;AACd,eAAK1B,cAAL,GAAsB,CAAtB;AACA,eAAKG,UAAL,GAAkB,IAAlB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEMuB,QAAAA,QAAQ,GAAE;AACb,eAAKxB,UAAL,GAAkB,KAAlB;AAEH;;AAlEmC,O;;;;;iBAYP,C","sourcesContent":["import { _decorator, Component, EditBox, Node } from 'cc';\nconst { ccclass, property } = _decorator;\nimport Singleton from './Singleton';\n\n@ccclass('reelRoll')\nexport class reelRoll extends Component {\n    public singleton: Singleton = Singleton.getInstance()\n    public symbolList: Node[] = []\n    public currMoveLength: number = 0\n    public reelRowNum: number = 0\n    public colNum: number = null; // 行配置\n    public rollStates: boolean = false\n    public quickStop: boolean = false\n    public rollSymbolTypes: number[] = []\n    public rollPoint: number = 0; // 滚动指针\n    public rollListLength: number = null; // 滚动指针\n    @property(Number)\n    public curColIndex: number = 0\n    start() {\n        this.colNum = this.singleton.reelColAndRow.length\n        this.reelRowNum = this.singleton.reelColAndRow[this.curColIndex]\n        this.rollSymbolTypes = this.singleton.rollList[this.curColIndex]\n        this.rollPoint = 0\n        this.rollListLength = this.rollSymbolTypes.length\n\n        this.initReel()\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    initReel(){\n        for(let iRow = 1; iRow < this.reelRowNum; iRow++){\n            let addNode = this.getUnActiveSymbol(iRow)\n            if (addNode != null){\n                addNode.active = true\n                let symbolType = this.getSmbolType()\n            }\n        }\n    }\n\n    public getSmbolType(): number{\n        let symbolType = this.rollSymbolTypes[this.rollPoint] \n        this.rollPoint = this.rollPoint + 1\n        if (this.rollPoint >= this.rollListLength ) {\n            this.rollPoint = 0\n        }\n        return symbolType\n    }\n\n    public getUnActiveSymbol(row: number): any{\n        let symbolListLength = this.symbolList.length\n        for(let index = 0; index < symbolListLength; index++){\n            let node = this.symbolList[index]\n            if (node.active == false){\n                return node\n            }\n        }\n        return null\n    }\n\n    public beginReel(){\n        this.currMoveLength = 0\n        this.rollStates = true\n        this.quickStop = false\n    }\n\n    public stopReel(){\n        this.rollStates = false\n\n    }\n}\n\n"]}