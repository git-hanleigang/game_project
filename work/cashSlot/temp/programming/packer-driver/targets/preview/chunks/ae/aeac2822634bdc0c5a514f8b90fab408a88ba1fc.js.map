{"version":3,"sources":["file:///Users/xcyy/Desktop/createrPro/cashSlot/assets/scripts/reelRoll.ts"],"names":["_decorator","Component","Singleton","ccclass","property","reelRoll","Number","singleton","getInstance","symbolList","currMoveLength","reelRowNum","colNum","rollStates","quickStop","start","reelColAndRow","length","curColIndex","update","deltaTime","initReel","iRow","getUnActiveSymbol","row","symbolListLength","index","node","active","beginReel","stopReel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEdC,MAAAA,S;;;;;;;;;OADD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;0BAIjBK,Q,WADZF,OAAO,CAAC,UAAD,C,UASHC,QAAQ,CAACE,MAAD,C,2BATb,MACaD,QADb,SAC8BJ,SAD9B,CACwC;AAAA;AAAA;AAAA,eAC7BM,SAD6B,GACN;AAAA;AAAA,sCAAUC,WAAV,EADM;AAAA,eAE7BC,UAF6B,GAER,EAFQ;AAAA,eAG7BC,cAH6B,GAGJ,CAHI;AAAA,eAI7BC,UAJ6B,GAIR,CAJQ;AAAA,eAK7BC,MAL6B,GAKZ,IALY;AAKN;AALM,eAM7BC,UAN6B,GAMP,KANO;AAAA,eAO7BC,SAP6B,GAOR,KAPQ;;AAAA;AAAA;;AAUpCC,QAAAA,KAAK,GAAG;AACJ,eAAKH,MAAL,GAAc,KAAKL,SAAL,CAAeS,aAAf,CAA6BC,MAA3C;AACA,eAAKN,UAAL,GAAkB,KAAKJ,SAAL,CAAeS,aAAf,CAA6B,KAAKE,WAAlC,CAAlB;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,QAAQ,GAAE;AACN,eAAI,IAAIC,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAG,KAAKX,UAA9B,EAA0CW,IAAI,EAA9C,EAAiD,CAC7C;AACH;AACJ;;AAEMC,QAAAA,iBAAiB,CAACC,GAAD,EAAkB;AACtC,cAAIC,gBAAgB,GAAG,KAAKhB,UAAL,CAAgBQ,MAAvC;;AACA,eAAI,IAAIS,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAGD,gBAA3B,EAA6CC,KAAK,EAAlD,EAAqD;AACjD,gBAAIC,IAAI,GAAG,KAAKlB,UAAL,CAAgBiB,KAAhB,CAAX;;AACA,gBAAIC,IAAI,CAACC,MAAL,IAAe,KAAnB,EAAyB;AACrB,qBAAOD,IAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;AAEME,QAAAA,SAAS,GAAE;AACd,eAAKnB,cAAL,GAAsB,CAAtB;AACA,eAAKG,UAAL,GAAkB,IAAlB;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEMgB,QAAAA,QAAQ,GAAE;AACb,eAAKjB,UAAL,GAAkB,KAAlB;AAEH;;AA7CmC,O;;;;;iBASP,C","sourcesContent":["import { _decorator, Component, EditBox, Node } from 'cc';\nconst { ccclass, property } = _decorator;\nimport Singleton from './Singleton';\n\n@ccclass('reelRoll')\nexport class reelRoll extends Component {\n    public singleton: Singleton = Singleton.getInstance()\n    public symbolList: Node[] = []\n    public currMoveLength: number = 0\n    public reelRowNum: number = 0\n    public colNum: number = null; // 行配置\n    public rollStates: boolean = false\n    public quickStop: boolean = false\n    @property(Number)\n    public curColIndex: number = 0\n    start() {\n        this.colNum = this.singleton.reelColAndRow.length\n        this.reelRowNum = this.singleton.reelColAndRow[this.curColIndex]\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    initReel(){\n        for(let iRow = 1; iRow < this.reelRowNum; iRow++){\n            // let addNode = this.get\n        }\n    }\n\n    public getUnActiveSymbol(row: number): any{\n        let symbolListLength = this.symbolList.length\n        for(let index = 0; index < symbolListLength; index++){\n            let node = this.symbolList[index]\n            if (node.active == false){\n                return node\n            }\n        }\n        return null\n    }\n\n    public beginReel(){\n        this.currMoveLength = 0\n        this.rollStates = true\n        this.quickStop = false\n    }\n\n    public stopReel(){\n        this.rollStates = false\n\n    }\n}\n\n"]}